---
- name: Create the Python installation group
  group:
    name: "{{ group }}"
  become: true

- name: Create the Python installation owner
  user:
    name: "{{ user }}"
    group: "{{ group }}"
  become: true

- name: Install dependencies
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - gcc
    - make
    - bzip2-devel
    - gdbm-devel
    - libdb-devel
    - libffi-devel
    - ncurses-devel
    - openssl-devel
    - readline-devel
    - sqlite-devel
    - tcl-devel
    - tk-devel
  become: true

- name: Download the source archive
  get_url:
    dest: "{{ build_dir }}"
    group: "{{ group }}"
    owner: "{{ user }}"
    url: "https://www.python.org/ftp/python/{{ python_version }}/Python-{{ python_version }}.tar.xz"
  become: true

- name: Unpack the Python source archive
  unarchive:
    src: "{{ build_dir }}/Python-{{ python_version }}.tar.xz"
    dest: "{{ build_dir }}"
    group: "{{ group }}"
    owner: "{{ user }}"
    remote_src: true
  become: true

- name: Check configure hasn't run
  stat:
    path: "{{ build_dir }}/Python-{{ python_version }}/config.log"
  register: stat_result

- name: Run ./configure
  command: ./configure --prefix={{ install_dir }}/Python-{{ python_version.split('.')[0] }}.{{ python_version.split('.')[1] }} chdir={{ build_dir }}/Python-{{ python_version }}
  become: true
  become_user: "{{ user }}"
  register: configure_result
  when: not stat_result.stat.exists

- name: Run make
  make:
    chdir: "{{ build_dir }}/Python-{{ python_version }}"
  become: true
  become_user: "{{ user }}"
  register: make_result
  when: configure_result is not skipped

- name: Run make install
  make:
    chdir: "{{ build_dir }}/Python-{{ python_version }}"
    target: install
  become: true
  register: install_result
  when: make_result is not skipped

- name: Set permissions
  file:
    path: "{{ install_dir }}/Python-{{ python_version.split('.')[0] }}.{{ python_version.split('.')[1] }}"
    owner: "{{ user }}"
    group: "{{ group }}"
    recurse: true
  become: true
  when: install_result is not skipped

# - name: Update pip and setuptools
#   pip:
#     name: "{{ item }}"
#     executable: "{{ install_dir }}/Python-{{ python_version.split('.')[0] }}.{{ python_version.split('.')[1] }}/bin/pip{{ python_version.split('.')[0] }}.{{ python_version.split('.')[1] }}"
#     # state: latest
#     state: present
#   with_items:
#     - pip
#     - setuptools
#   become: true
#   become_user: "{{ user }}"

- name: Install standard packages
  pip:
    name: "{{ item }}"
    executable: "{{ install_dir }}/Python-{{ python_version.split('.')[0] }}.{{ python_version.split('.')[1] }}/bin/pip{{ python_version.split('.')[0] }}.{{ python_version.split('.')[1] }}"
    # state: latest
    state: present
  with_items:
    - virtualenv
    - ipython
    - wheel
  become: true
  become_user: "{{ user }}"
